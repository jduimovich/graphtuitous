# Sample multiple service demo and deploy to openshift
# test via push

name: OpenShift build all services and Deploy
env:
  # ⬇️ EDIT with your registry and registry path.
  REGISTRY: quay.io/jduimovich0
  # ⬇️ EDIT with your registry username.
  REGISTRY_USER: jduimovich0
  REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

  # ⬇️ EDIT to log into your OpenShift cluster and set up the context.
  # See https://github.com/redhat-actions/oc-login#readme for how to retrieve these values.
  OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
  OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}

  # ⬇️ EDIT with the port your application should be accessible on.
  APP_PORT: 8080

  # ⬇️ EDIT if you wish to set the kube context's namespace after login. Leave blank to use the default namespace.
  OPENSHIFT_NAMESPACE: "jduimovich-dev"

  # If you wish to manually provide the APP_NAME and TAG, set them here, otherwise they will be auto-detected.
  APP_NAME: ""
  TAG: ""

on:
  # https://docs.github.com/en/free-pro-team@latest/actions/reference/events-that-trigger-workflows
  push:
    # Edit to the branch(es) you want to build and deploy on each push.
    branches: [ main ]

jobs:
  openshift-ci-cd:
    name: Build and deploy to OpenShift
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '2'

    - name: Determine app name
      if: env.APP_NAME == ''
      run: |
        echo "APP_NAME=$(basename $PWD)" | tee -a $GITHUB_ENV

    - name: Determine tag
      if: env.TAG == ''
      run: |
        echo "TAG=${GITHUB_SHA::7}" | tee -a $GITHUB_ENV 

    - name:  Patch Deployment YAML with new image references
      run: |  
        source compute_change.sh 
 
    - name: Rebuild fib-go
      if: env.CHANGE_FIB_GO == 'true'
      run: |
        echo "rebuilding fib-go"  
        if ${{ env.CHANGE_FIB_GO }} == true 
        then
         echo run true 
        fi      
    - name: Rebuild fib-go
      if: env.CHANGE_FIB_GO == 'false'
      run: |
        echo "NOT rebuilding fib-go"   
        if ${{ env.CHANGE_FIB_GO }} == false
        then
         echo run false 
        fi     